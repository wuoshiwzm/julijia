<?php

/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/10/25 0025
 * Time: 12:28
 *  产品分类业务类
 */
class ProductCategory
{
    /**
     * @param $data
     * @return bool
     * 验证产品分类
     */
    static function validatorCategory( $data )
    {
        $rules =  [];
        $message = [];
        $validator = Validator::make( $data, $rules, $message );
        if( $validator->passes() )
        {
            return true;

        }else
        {
            return $validator;
        }
    }

    /**
     * @param $data
     * @return mixed
     * 添加分类
     */
    static function addCategory( $data )
    {
        $path = $data['icon'];
        $res = Source_Product_ProductCategory::create( $data );
        if( $res && $path )
        {
            //上传图片
            (new Upload())->uploadProductImage( $res->id, $path, 'category' );
        }
        return $res;
    }

    /**
     *  获取分类层级
     */
    static function getCategoryRelation()
    {
        $data = Source_Product_ProductCategory::whereRaw('status = 1 and leavel != 3')->select('parent_id','name','id','leavel')->get();
        return ProductCategory::getTwoTree( $data,'parent_id','id',0,'prefix');
    }


    /**
     * @param $data
     * @return array
     * 获取分类
     */
    static function getTree( $data, $pid)
    {
        $arr = array();
        foreach ( $data as $k=>$row )
        {
            if( $row->parent_id == $pid )
            {
                $arr[] = $row;
                $arr = array_merge($arr,self::getTree($data, $row->id ));
            }
        }
        return $arr;
    }

    /**
     * @param $data
     * @param $file_pid
     * @param $file_id
     * @param $pid
     * @param $filename
     * @return array
     * 排除3级目录
     */
    static function getTwoTree( $data,$file_pid,$file_id,$pid,$filename )
    {
        $arr = array();
        foreach ( $data as $K=>$v )
        {
            if( $v->$file_pid == $pid )
            {
                $data[$K][$filename] = '◢&nbsp;';
                $arr[] = $data[$K];
                foreach ( $data as $i=>$j )
                {
                    if( $j->$file_pid == $v->$file_id )
                    {
                        $data[$i][$filename] = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;◢&nbsp;';
                        $arr[] = $data[$i];
                    }
                }
            }
        }
        return $arr;
    }

}