<?php


class MemberController extends \BaseController
{

    protected $layout = 'layouts.frontend';


    protected function setupLayout()
    {
        if (!is_null($this->layout)) {
            $this->layout = View::make($this->layout);
        }
    }

    public function view($path, $data = [])
    {
        $this->layout->content = View::make($path, $data);
    }


    public function __construct()
    {
        parent::__construct();
    }


    /**
     * 登录页
     */
    function login()
    {
        if (isset(Session::get('member')->id)) {
            return Redirect::to('member/cart');
        }
        return $this->view('frontend.login');
    }


    function index()
    {

    }

    /**
     * 注册
     */
    function register()
    {
        $this->view('frontend.register');
    }


    /**
     * @return mixed
     * 判断注册成功 存储信息
     */
    function store()
    {
        $input = Input::all();

        $err = [];
        $res = User::checkName($input['name']);
        if (!$res) {
            $err[] = '该用户名已被占用！';
        }

        //check if the $input data is legal
        $res = User::validatorUser($input);
        $res ?: $err = array_merge($res->all(), $err);


        if ($res === true && $err != []) {
            User::addUser($input);
        } else {
            return Redirect::back()->with('msg', $err)->withInput();
        }
    }


    /**
     * @return mixed
     * 判断登录
     */
    function loginVerify()
    {

        $username = Input::get('name');
        $password = Input::get('password');


        $res = User::login($username, $password);

        if ($res) {

            //更新上次登录时间
            $user = User::getUserByName(Input::get('name'))->first();

            $user->update(array('last_time' => date('Y-m-d h:m:s')));
            // 存入session
            Session::put('member', $user);
//            dd(Session::get('member')->id);
            return Redirect::to('member/cart');
        }
        return Redirect::back()->with('msg', 'failed to login')->withInput();
    }

    /**
     * 退出登录
     */
    function quit()
    {
        Session::forget('member');
        return Redirect::to('member');
    }


    /**
     * @return mixed
     * 发送短信
     */
    function sendSms()
    {

        $input = trimValue(Input::all());
        //getCode( $phone, $type, $data = null );
        return sms::getCode($input['phone'], 1);
        //Session::put('smsCode',$code,5);

    }

    /**
     *
     */
    function resetPass()
    {
        if(!Input::all()){
          return  $this->view('frontend.reset_pass');
        }

        //接受更新数据

        $input = trimValue(Input::all());



       $res =  Source_User_UserInfo::where('mobile_phone',$input['phone'])
            ->first()
            ->update(['password'=>$input['password']]);

       if($res == true){
           return Redirect::to('member');
       }else{
           return Redirect::back()->with('msg', '更改失败！');
       }
       ;

    }
}
