<?php

//投诉
class FeedbackMemberController extends CommonController
{
    private $user_id;
    protected $layout = 'layouts.member.index';


    protected function setupLayout()
    {
        if (!is_null($this->layout)) {
            $this->layout = View::make($this->layout);
        }
    }

    public function view($path, $data = [])
    {
        $this->layout->content = View::make($path, $data);
    }

    function __construct()
    {
        if (!Session::has('member')) {
            return Redirect::to('member/login');
        }
        $userInfo = Session::get('member');
        $this->user_id = $userInfo->id;
    }

    /**
     * 我的评价
     *
     * @return Response
     */
    /**
     * 我的退款
     *
     * @return Response
     */
    public function index()
    {
        //当前对应的用户退款信息
        $data = Source_Feedback_FeedbackInfo::where('user_id',$this->user_id);

//        Feedback::getFeedbackByUser($this->user_id);
        $feedbackInfos = $data->get();

        //分页
        $setPage = Input::get('setpage') ? Input::get('setpage') : self::$adminPage;
        $data = $data->paginate($setPage);
        $set['setpage'] = $setPage;
//
//        foreach ($feedbackInfos as $feedback) {
//            //商品名称
//            $product = Source_Feedback_FeedbackInfo::find($feedback->id)->first()->item;
//            $productName = $product?$product->product_name:'';
//
//            $reason = Source_Feedback_FeedbackInfo::find($feedback->id)->first()->reason;
//            $reason = $reason?$reason->value:'';
//            $feedback->productName = $productName;
//            $feedback->reasonName = $reason;
//        }

        //搜索条件
        if (!empty(Input::all())) {
            die('input here');
        }


        return $this->view('member.feedback', compact('feedbackInfos', 'data', 'set'));

    }

    /**
     * @param $orderId 订单id
     * @param $ItemId 订单商品id
     * 提交评价
     * url : 'get('/feedback/apply_feedback/{order_id}/{item_id}', 'FeedbackMemberController@applyFeedback')'
     */
    public function applyFeedback($orderId, $ItemId)
    {


        $orderId = decode(trim($orderId));
        $ItemId = decode(trim($ItemId));

        $orderInfo = Order::getOrdersById($orderId);
        $orderItem = Order::getOrderItemsById($ItemId);

        $reasons = Feedback::getAllReason();



        return $this->view('member.order.apply_feedback', compact('orderItem', 'orderInfo','reasons'));

    }



    /**
     * 存储投诉信息  更新表 feedback_info
     */
    public function createFeedback()
    {


        if (!Input::all())
            return Redirect::back();

        $input = trimValue(Input::all());
        $input = array_except($input, ['_token', 'method']);

        $orderId = Input::get('orderId');
        $orderItemId = Input::get('itemId');

        //判断是否已经提交过了投诉
        if (Feedback::CheckItem($orderId, $orderItemId)) {
            die('已经提交过此商品的投诉');
        }

        $feedback['order_id'] = $orderId;
        $feedback['item_id'] = $orderItemId;
        $feedback['user_id'] = $this->user_id;

        $feedback['content'] = Input::get('content');
        //投诉当前状态 1：平台未确认 2：平台已确认
        $feedback['status'] = 1;
        $feedback['feedback_sn'] ='feedback'.getMicroTimestamp();
        $feedback['reason_id'] = Input::get('reasonId');

        $feedback['shop_id'] = 1;
        //反馈类型5，留言；1，投诉；2 ，询问；3，售后；4，求购
        $feedback['type'] = 1;

        $validator = Feedback::validatorFeedback($input);

        if ($validator === true) {
            $res = Feedback::createFeedback($feedback);

            if ($res) {
                //添加成功

                return Redirect::to('member/feedback')->with('msg', '添加成功');

            } else {
                //添加失败
                return back()->with('msg', '添加失败');
            }

        } else {
            return back()->withErrors($validator);
        }
    }


    /**
     * @param $id
     * 删除投诉
     */
    public function removeFeedback($id)
    {
        $id = decode(trim($id));
        $res = Feedback::removeFeedbackById($id);


        if ($res) {
            $obj = new stdClass();
            $obj->status = 0;
            $obj->msg = '删除成功';
            return json_encode($obj);

        } else {
            $obj = new stdClass();
            $obj->status = 1;
            $obj->msg = '删除失败';
            return json_encode($obj);
        }


    }





}
