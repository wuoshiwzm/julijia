<?php

class AddressMemberController extends CommonController {

    private $user_id;
    protected $layout = 'layouts.member.index';


    protected function setupLayout()
    {
        if (!is_null($this->layout)) {
            $this->layout = View::make($this->layout);
        }
    }

    public function view($path, $data = [])
    {
        $this->layout->content = View::make($path, $data);
    }

    function __construct()
    {
        if (!Session::has('member')) {
            return Redirect::to('member/login');
        }
        $userInfo = Session::get('member');
        $this->user_id = $userInfo->id;
        $province = Source_Area_Province::get();
        View::share(array('province' => $province));
    }

    /**
	 * Display a listing of the resource.
	 *
	 * @return Response
	 */
	public function index()
	{

	    $addrs = Source_User_UserInfoAdd::where('user_id',$this->user_id)->get();

		return $this->view('member.config_address',compact('addrs'));
	}


	/**
	 * Show the form for creating a new resource.
	 *
	 * @return Response
	 */
	public function create()
	{
		//
	}


	/**
	 * Store a newly created resource in storage.
	 *
	 * @return Response
	 */
	public function store()
	{


        if(Input::get('_token') == csrf_token()){
            $input = Input::except('_token','area','status');
            $input['district'] = Input::get('area');
            if(Input::get('status')=='on'){
                $input['status'] =1;
            }else{
                $input['status'] =0;
            }
        }
        
        $input['user_id']=$this->user_id;
        $res = Address::createAddr($input);

        if($res){
            return Redirect::to('member/config/address')->with('msg','修改成功');
        }
	}


	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
		//
	}


	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
        $addrEdit = Address::getAddress($id);
        return $this->view('member.config_address_edit',compact('addrEdit'));
	}


	/**
	 * Update the specified resource in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id)
	{
        $input = trimValue( Input::except('_token','_method','quiz1','quiz2','quiz3'));
        $validator = Address::validatorAddress( $input );
        if( $validator === true )
        {

            $res = Address::update($id,$input);

            if ( $res )
            {
                //修改成功
                return Redirect::to('member/config/address')->with('msg','修改成功');

            }else
            {
                //修改失败
                return Redirect::back()->with('msg','修改失败');
            }

        }else
        {
            return Redirect::back()->withErrors($validator);
        }
	}


	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
    public function destroy($id)
    {
        $id = decode(trim($id));
        $res = Address::deleteById($id);

        if ($res) {
            $obj = new stdClass();
            $obj->status = 0;
            $obj->msg = '删除成功';
            return json_encode($obj);

        } else {
            $obj = new stdClass();
            $obj->status = 1;
            $obj->msg = '删除失败,此地址为默认地址或者网络不佳';
            return json_encode($obj);
        }

    }


    /**
     * @param $id
     * 设为默认地址
     */
    public function setDefault($id)
    {
        $id = decode(trim($id));
        $user_id = $this->user_id;
         $res = Address::setDefault($id,$user_id);
        if($res){
            return Redirect::to('member/config/address')->with('msg','修改成功');
        }

	}


}
